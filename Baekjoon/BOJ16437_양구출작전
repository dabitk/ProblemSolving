import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class BOJ16437 {
	static List<List<Integer>> adjList = new ArrayList<>();
	static boolean[] visited;
	static int[] parent;
	static char[] sheepWolf;
	static int[] countArr;
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		sheepWolf = new char[N+1];
		countArr = new int[N+1];
		
		StringTokenizer st;
		int rootNode = 0;
		for (int i = 0; i < N+1; i++) {
			adjList.add(new ArrayList<Integer>());
		}
		for (int i = 2; i < N+1; i++) {
			String[] cmd = br.readLine().split(" ");
			sheepWolf[i] = cmd[0].charAt(0);
			countArr[i] = Integer.parseInt(cmd[1]);
			int parent = Integer.parseInt(cmd[2]);
			adjList.get(parent).add(i);
		}

		System.out.println(postOrder(1));
	}
	
	public static long postOrder(int node) {
		long sum = 0;
		for (int i = 0; i < adjList.get(node).size(); i++) {
			sum += postOrder(adjList.get(node).get(i));
		}
		if(sheepWolf[node] == 'S') return sum + countArr[node];
		else return (sum - countArr[node] >= 0) ? sum - countArr[node] : 0;
	}
}
