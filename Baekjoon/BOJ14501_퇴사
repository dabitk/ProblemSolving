import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.StringTokenizer;

public class BOJ_14501 {
	static int N;
	static int[] T;
	static int[] P;
	
	static int result = 0;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		
		T = new int[N+1];
		P = new int[N+1];
		
		String str;
		for (int i = 1; i < N + 1; i++) {
			str = br.readLine();
			T[i] = Integer.parseInt(str.split(" ")[0]);
			P[i] = Integer.parseInt(str.split(" ")[1]);
		}
		
		int sum = 0;
		for (int i = 1; i < N + 1; i++) {
			sum = 0;
			if(i + T[i] <= N + 1) {
				sum = P[i];
				dfs(i, sum);
			}
		}
		
		System.out.println(result);
	}
	
	public static void dfs(int index, int sum) {
		if (index + T[index] >= N + 1) {
			result = Math.max(result,  sum);
		} else {
			for (int i = index + T[index]; i < N+1; i++) {
				if(i + T[i] <= N+1) {
					sum += P[i];
					dfs(i, sum);
					sum -= P[i];
				} else {
					dfs(i, sum);
				}
			}
		}
	}
}
