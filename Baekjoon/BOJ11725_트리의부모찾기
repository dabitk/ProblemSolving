package BaekJoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class BOJ11725 {
	static ArrayList<ArrayList<Integer>> adjList;
	static boolean[] visited;
	static int[] parents;
	static int N;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		adjList = new ArrayList<ArrayList<Integer>>();
		
		for(int i = 0; i < N+1; i++) {
			adjList.add(new ArrayList<Integer>()); 
		}
		
		for(int i = 0; i < N-1; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			adjList.get(a).add(b);
			adjList.get(b).add(a);
		}
		
		visited = new boolean[N+1];
		parents = new int[N+1];
		visited[1] = true;
		dfs(1);
		
		//System.out.println(sb.toString());
		for(int i = 2; i < parents.length; i++) {
			System.out.println(parents[i]);
		}
		br.close();
	}
	
	public static void dfs(int idx) {

		for (int i = 0; i < adjList.get(idx).size(); i++) {
			int next = adjList.get(idx).get(i);
			if(!visited[next]) {
				visited[next] = true;
				parents[next] = idx;
				dfs(next);
			}
		}
	}

}
