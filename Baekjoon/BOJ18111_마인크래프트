import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();
        StringTokenizer st = new StringTokenizer(br.readLine());
        
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        int B = Integer.parseInt(st.nextToken());
        
        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        
        int[][] arr = new int[N][M];
        for(int i = 0; i < N; i++) {
        	st = new StringTokenizer(br.readLine());
        	for(int j = 0 ; j < M; j++) {
        		arr[i][j] = Integer.parseInt(st.nextToken());
        		max = Math.max(arr[i][j], max);
        		min = Math.min(arr[i][j], min);
        	}
        }
        int answerTime = Integer.MAX_VALUE;
        int height = max;
        for(int k = max; k >= min; k--) {
        	int inventory = B;
        	int time = 0;
        	
            for (int i = 0; i < N; i++) {
            	for (int j = 0; j < M; j++) {
            		//int blockFill = 0;
            		if (arr[i][j] == k) continue; //이미 타겟 높이와 같다면 아무것도 할 필요없음.
            		else {
            			int diff = Math.abs(k - arr[i][j]);
            			if (k > arr[i][j]) {
            				inventory -= diff;
            				time += diff;
            			} else {
            				inventory += diff;
            				time += (2*diff);
            			}
            		}
            	}
            }
    		if(inventory < 0) {
    			continue;
    		}
    		if (time< answerTime) {
    			answerTime = time;
    			height = k;
    		}

        }
        System.out.println(answerTime + " " + height);
		br.close();
	}
}
