package BaekJoon;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class BOJ10828 {
	static ArrayList<Integer> list = new ArrayList<>();
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		
		for(int i = 0; i < N; i++) {
			String[] commands = br.readLine().split(" ");
			if (commands.length == 2) {
				//push
				push(Integer.parseInt(commands[1]));
			} else {
				if (commands[0].equals("size")) {
					System.out.println(size());
				} else if (commands[0].equals("top")) {
					System.out.println(top());
				} else if (commands[0].equals("empty")) {
					System.out.println(empty());
				} else if (commands[0].equals("pop")) {
					System.out.println(pop());
				}
			}
		}
	}
	
	public static void push(int n) {
		list.add(n);
	}
	
	public static int top() {
		if (!list.isEmpty()) {
			return list.get(list.size() - 1);
		} else {
			return -1;
		}
	}
	
	public static int size() {
		return list.size();
	}
	
	public static int pop() {
		if (!list.isEmpty()) {
			return list.remove(list.size()-1);
		} else {
			return -1;
		}
	}
	
	public static int empty() {
		if (!list.isEmpty()) {
			return 0;
		} else {
			return 1;
		}
	}
}
