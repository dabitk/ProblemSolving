import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static boolean[] visited;
	static int N;
	static int[][] graph;
	static int result = 0;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		N = Integer.parseInt(br.readLine());
		int M = Integer.parseInt(br.readLine());
		graph = new int[N+1][N+1];
		visited = new boolean[N+1];
		for(int i = 0; i < M; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			graph[a][b] = 1;
			graph[b][a] = 1;
		}
		visited[1] = true;
		//result++;
		dfs(1);
		
		System.out.println(result-1);
	}
	
	public static void dfs(int v) {
		result++;
		//System.out.println("node:"+v);
		for(int i = 1; i <= N; i++) {
			//System.out.println(graph[v][i]);
			if(graph[v][i] == 1 && graph[i][v] == 1 && visited[i] == false) {
				visited[i] = true;
				dfs(i);
			}
		}
	}

}
