import java.util.ArrayList;
import java.util.Collections;

class FileInfo implements Comparable<FileInfo>{
    public String fileName;
    public int fileIdx;
    public String Head;
    public String Number;
    public String Tail;
    
    public FileInfo(String fileName, int fileIdx, String head, String number, String tail) {
        this.fileName = fileName;
        this.fileIdx = fileIdx;
        Head = head;
        Number = number;
        Tail = tail;
    }
    
    @Override
    public int compareTo(FileInfo o) {
        //Head를 기준으로 오름차순 정렬
        if (this.Head.toLowerCase().compareTo(o.Head.toLowerCase()) > 0) {
            return 1;
        }
        
        else if(this.Head.toLowerCase().compareTo(o.Head.toLowerCase()) == 0) {
            //Number 기준으로 오름차순 정렬
            if (Integer.parseInt(this.Number) - Integer.parseInt(o.Number) > 0){
                return 1;
            }
            
            //HEAD 부분과, NUMBER의 숫자도 같을 경우
            else if(Integer.parseInt(this.Number) - Integer.parseInt(o.Number) == 0) {
                //입력 순으로 오름차순 정렬
                return this.fileIdx - o.fileIdx;
            }
        }
        
        return -1;
    }
}

class Solution {
    public String[] solution(String[] files) {
        String[] answer = {};
        
        ArrayList<FileInfo> list = new ArrayList<>();
        for (int s = 0; s < files.length; s++) {
            String fileName = files[s];
            String Head = "";
            String Number = "";
            String Tail = "";
            
            StringBuilder sb = new StringBuilder();
            String name = fileName.toLowerCase();
            for (int i = 0; i < name.length(); i++) {
                char word = name.charAt(i);
                
                //현재 문자가 알파벳 또는 - 인 경우 or Number를 담다가 다시 문자를 만나는 경우
                if((word - 'a' >= 0 && word - 'a' <= 26) || (word == '-' || word == '.' || word == ' ')) {
                    // Head와 Number가 모두 갱신되었다면 -> 나머지는 Tail
                    if (!Number.equals("")) {
                        Tail += fileName.substring(i);
                        break;
                    }
                    
                    else {
                        Head += fileName.charAt(i);
                    }
                }
                
                // 현재 문자가 숫자인 경우 -> 이 Number를 담기
                else if(word - '0' >= 0 && word - '0' <= 57) {
                    Number += fileName.charAt(i);
                }
            }
            
            list.add(new FileInfo(fileName, s, Head, Number, Tail));
        }
        
        Collections.sort(list);
        answer = new String[list.size()];
        for (int i = 0; i < answer.length; i++) {
            answer[i] = list.get(i).fileName;
        }
        
        return answer;
    }
}
