import java.util.*;


class Solution {
    public int[] solution(int[] answers) {
        int p1Score = 0;
        int p2Score = 0;
        int p3Score = 0;
        
        for(int i=0;i<answers.length;i++){
            //1번 수포자 점수 카운트
            switch(i % 5){
                case 0 :
                    if(answers[i] == 1) p1Score++;
                    break;
                case 1 :
                    if(answers[i] == 2) p1Score++;
                    break;
                case 2 :
                    if(answers[i] == 3) p1Score++;
                    break;
                case 3 :
                    if(answers[i] == 4) p1Score++;
                    break;
                case 4 :
                    if(answers[i] == 5) p1Score++;
                    break;
            }
            
            //2번 수포자 점수 카운트
            switch(i%8){
                case 0 :
                    if(answers[i] == 2) p2Score++;
                    break;
                case 1 :
                    if(answers[i] == 1) p2Score++;
                    break;
                case 2 :
                    if(answers[i] == 2) p2Score++;
                    break;
                case 3 :
                    if(answers[i] == 3) p2Score++;
                    break;
                case 4 :
                    if(answers[i] == 2) p2Score++;
                    break;
                case 5 :
                    if(answers[i] == 4) p2Score++;
                    break;
                case 6 :
                    if(answers[i] == 2) p2Score++;
                    break;
                case 7 :
                    if(answers[i] == 5) p2Score++;
                    break;
            }
            
            //3번 수포자 점수 카운트
            switch(i%10){
	            case 0 :
	                if(answers[i] == 3) p3Score++;
	                break;
	            case 1 :
	                if(answers[i] == 3) p3Score++;
	                break;
	            case 2 :
	                if(answers[i] == 1) p3Score++;
	                break;
	            case 3 :
	                if(answers[i] == 1) p3Score++;
	                break;
	            case 4 :
	                if(answers[i] == 2) p3Score++;
	                break;
	            case 5 :
	                if(answers[i] == 2) p3Score++;
	                break;
	            case 6 :
	                if(answers[i] == 4) p3Score++;
	                break;
	            case 7 :
	                if(answers[i] == 4) p3Score++;
	                break;                
	            case 8 :
	                if(answers[i] == 5) p3Score++;
	                break;
	            case 9 :
	                if(answers[i] == 5) p3Score++;
	                break;
            }
        }
        //System.out.println(p1Score + ", " + p2Score + ", "+p3Score);
        
        //Player 클래스(구조체)로 수포자Id : 획득점수 페어를 만들고 정렬함
        Player[] pList = new Player[3];
        pList[0] = new Player(1, p1Score);
        pList[1] = new Player(2, p2Score);
        pList[2] = new Player(3, p3Score);
        
        Arrays.sort(pList, (p1, p2) -> p1.compareTo(p2));
        
        //System.out.println(pList[0].getId() +", "+pList[1].getId()+", "+pList[2].getId());
        
        //answer배열 크기 정하기
        int resultLen = 0;
        for(int i=0;i<pList.length;i++) {
         	if(pList[i].getScore() == pList[0].getScore()) { //점수기준 내림차순 정렬을 했기때문에 pList[0]에는 가장 높은 점수가 있음.
                //가장 높은 점수만 answer배열에 넣음.
        		resultLen++;
        	}
        }

        int[] answer = new int[resultLen];
        
        for(int i=0;i<answer.length;i++) {
        	if(pList[i].getScore() != 0) {
        		answer[i] = pList[i].getId();
        	}
        }

        return answer;
    }

    
    class Player implements Comparable<Player>{
    	private int id;
    	private int score;
    	
    	public Player(int id, int score) {
    		this.id=id;
    		this.score=score;
    	}
    	
    	public int getId() {
    		return id;
    	}
    	
    	public int getScore() {
    		return score;
    	}
    	
    	@Override
    	public int compareTo(Player p) {
    		if(this.getScore() < p.getScore()) { //점수 기준으로 내림차순 정렬
    			return 1; 
    		}else if(this.getScore() == p.getScore()) {
    			if(this.getId() > p.getId()) { //동일 점수면 id : 1, 2, 3 이렇게..p.
    				return 1;
    			}
    		}
    		return -1;
    	}
    }
}
